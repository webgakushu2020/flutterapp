/*----------------------------------
  08_関数（function）
----------------------------------

①関数って？
処理をひとまとめにした箱！
function（ファンクション）とも呼ばれる

＊ポイント＊
・実は…今までにたくさん使ってきた「print()」も関数！
・すべてを囲っているvoid main()〜も関数！！
→プログラムが実行されたとき、自動でmain関数が実行されるようになっている

----------------------------------

②関数を書いてみよう！

関数は
・作る
・実行する

の2段階が必要！

・あいさつプログラムを作ろう

【コード】

void main() {
  void greet() {
    print('こんにちは');
  }
}

【実行結果】
(なにもでない)


！実行させるために、関数の名前()を追記しよう！


【コード】
void main() {
  void greet() {
    print('こんにちは');
  }

  greet();
}

【実行結果】
こんにちは

----------------------------------

③引数を設定した関数(文字列編)

引数とは…関数の中で使うための値

・(カッコの中)に入力した値 = 引数を使って、プログラムを動かそう！

【コード】
void main() {
  // ここに書いてね
  greet('一郎');
  greet('二郎');
}

void greet(name) {
  print('$nameさん、こんにちは');
}


【実行結果】
一郎さん、こんにちは
二郎さん、こんにちは


＊ポイント＊
・main関数の外に新しい関数を作り→mainの中で実行をする
→main関数の中には「実行の処理」だけ書く
→作る場所は、上でも下でもどちらでもOK

----------------------------------


④引数を2つ設定した関数(文字列編)

・引数をもうひとつ設定して、時間帯によってあいさつを変えよう！

【コード】
void main() {
  greet('一郎', '朝');
  greet('二郎', '夜');
}

void greet(name, time) {
  if (time == '夜') {
    print('$nameさん、こんばんは');
  } else {
    print('$nameさん、こんにちは');
  }
}

【実行結果】
一郎さん、こんにちは
二郎さん、こんばんは

----------------------------------


⑤引数を設定した関数(整数編)

・入力した数字Nの1+2+3...Nを計算してくれるプログラムを作ろう！

【コード】

void main() {
  print(sum(2));
}

int sum(int n) {
  var result = 0;
  for (var i = 1; i <= n; i++) {
    result += i;
  }
  return result;
}


【実行結果】100を設定した場合
5050

＊ポイント＊
・int型を返す関数なので、void〜ではなくint〜で作っている
・パソコンがあっぷあっぷになるので、計算する数字は4桁くらいにおさめておこう
おまけ：数学ポイント
等差数列の和を使うと、sum関数の中身を var result = (n + 1) * n ~/ 2; に書き換えられる

----------------------------------
  実際に書いてみよう！
----------------------------------*/

void main() {
  // ここに書いてみよう！
}

// ここにも書こう！